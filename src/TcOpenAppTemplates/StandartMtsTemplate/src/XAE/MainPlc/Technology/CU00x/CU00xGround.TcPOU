<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="CU00xGround" Id="{ea798b9b-c255-4bc1-bc0e-66e2dbced7d9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CU00xGround EXTENDS TcoTaskedSequencer IMPLEMENTS ICUTask
VAR
	_groundDone : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Run();]]></ST>
    </Implementation>
    <Method Name="CancelGround" Id="{385ae32c-3ace-4e69-94d0-510352f2beb2}">
      <Declaration><![CDATA[METHOD CancelGround
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_groundDone := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="GroundDone" Id="{bfe2dc3e-b96f-45e6-b8e5-546275bc09d6}">
      <Declaration><![CDATA[PROPERTY GroundDone : BOOL]]></Declaration>
      <Get Name="Get" Id="{a9b631dc-2a8e-467d-8150-09430bd294b6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[GroundDone := _groundDone;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Main" Id="{0f44b6c1-dae2-4888-a3a0-6a44fd813a80}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Main method of the sequener. Custom code needs to be placed here. The sequencer is executed by call of **Instance.Run()** method.
			This method is abstract, and it must be overridden in derived block.
		</summary>
	</docu>
~*)
METHOD PROTECTED Main : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (Step(100, TRUE, 'STOPPING OTHER MODES')) THEN
	Station.Automat.Restore();
	Station.Manual.Restore();
    CompleteStep();
END_IF

IF (Step(200, TRUE, 'STOPPING OTHER MODES')) THEN	
    StepCompleteWhen(THIS^._currentStep.Duration > T#3S);
END_IF

IF (Step(10000, TRUE, 'LAST STEP')) THEN	
	_groundDone := TRUE;
	THIS^._task.DoneWhen(_groundDone);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnStart" Id="{81ba5eb0-f935-4736-a619-b5f4155759ce}">
      <Declaration><![CDATA[METHOD PUBLIC OnStart]]></Declaration>
      <Implementation>
        <ST><![CDATA[Station.Automat.Restore();
Station.Manual.Restore();]]></ST>
      </Implementation>
    </Method>
    <Property Name="Station" Id="{f5f158e7-8f54-483b-8ef9-070bf6fa1248}">
      <Declaration><![CDATA[PROPERTY Station : REFERENCE TO CU00x]]></Declaration>
      <Get Name="Get" Id="{fecf57ba-7b86-4b09-b4c9-79cd0e6e6559}">
        <Declaration><![CDATA[VAR
    _station : POINTER TO CU00x;
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYPOINTER(Parent, _station) THEN // Check if _Parent is Station001
    Station REF= _station^;              // If the check is successful dereference a pointer. simlar to THIS^ or SUPER^
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>