<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="CU00xAutomat" Id="{7d4ccf14-fbfb-4c7b-8fab-cda3fabc0370}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CU00xAutomat EXTENDS TcoTaskedSequencer IMPLEMENTS ICUTask
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Run();]]></ST>
    </Implementation>
    <Method Name="Main" Id="{65c64653-c354-4e9f-878f-19a4b135c641}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Main method of the sequener. Custom code needs to be placed here. The sequencer is executed by call of **Instance.Run()** method.
			This method is abstract, and it must be overridden in derived block.
		</summary>
	</docu>
~*)
METHOD PROTECTED Main : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (Step(100, TRUE, 'LOAD PROCESS SETTING')) THEN
    //-------------------------------------
    Station.ProcessDataManager.Data := Station.Technology.ProcessSettings.Data;
    //-------------------------------------
END_IF

IF (Step(200, TRUE, 'LOAD PROCESS SETTING')) THEN
    //-------------------------------------
    StepCompleteWhen(Station.ProcessDataManager.Create('ABC').Done);
    //-------------------------------------
END_IF

IF (Step(RESTORE_STEP_ID, TRUE, 'FIRST RESTORE STEP')) THEN
    //-------------------------------------
    StepCompleteWhen(TRUE);
    //-------------------------------------	
END_IF

IF (Step(10000, TRUE, 'LAST STEP')) THEN
    //-------------------------------------
    CompleteSequence();
    //-------------------------------------	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Station" Id="{2f34bbe0-ae77-4424-96f8-d75571b12d83}">
      <Declaration><![CDATA[PROPERTY Station : REFERENCE TO CU00x]]></Declaration>
      <Get Name="Get" Id="{5ff633c4-e770-483e-b525-87fa0c0de322}">
        <Declaration><![CDATA[VAR
    _station : POINTER TO CU00x;
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYPOINTER(Parent, _station) THEN // Check if _Parent is Station001
    Station REF= _station^;              // If the check is successful dereference a pointer. simlar to THIS^ or SUPER^
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>