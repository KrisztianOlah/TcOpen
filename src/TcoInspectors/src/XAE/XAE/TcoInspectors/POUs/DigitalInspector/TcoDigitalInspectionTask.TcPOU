<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="TcoDigitalInspectionTask" Id="{e7bce979-6fa9-0586-277b-8b4d59cf927a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TcoDigitalInspectionTask EXTENDS TcoCore.TcoTask
VAR
	Status : BOOL;
	SignalState : BOOL;
	ProcessedData : REFERENCE TO TcoDigitalInspectorData;
	_checkSteps : eCheckSteps;
	_passedTimer : Tc2_Standard.TON;
	_failedTimer : Tc2_Standard.TON;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF (Execute()) THEN	
	IF(ProcessedData.IsByPassed) THEN
		ProcessedData.Result := eInspectorResult.Bypassed;
		ProcessedData.TimeStamp := Context.RealTimeClock.NowLocal();		
		RETURN;
	END_IF
	
	
	SignalState := Status;
	
	CASE _checkSteps OF
		eCheckSteps.Initialisation:
			IF(ProcessedData.PassedTime = T#0S) THEN
				ProcessedData.PassedTime := T#50MS;
			END_IF;
		
			IF(ProcessedData.FailedTime = T#0S) THEN
				ProcessedData.FailedTime := T#100MS;
			END_IF;
			
			ProcessedData.Result := eInspectorResult.NoAction;
			_passedTimer(IN:=FALSE,PT:=T#0MS);
			_failedTimer(IN:=FALSE,PT:=T#0MS);
			_checkSteps := eCheckSteps.WatingForStart;
		eCheckSteps.WatingForStart:	
			IF(TRUE) THEN
				_checkSteps := eCheckSteps.Checking;
			END_IF;
			
		eCheckSteps.Checking:
			ProcessedData.Result := eInspectorResult.Running;
			_failedTimer(IN:= TRUE, PT:=ProcessedData.FailedTime);
			_passedTimer(IN:=Status = ProcessedData.RequiredStatus,PT:=ProcessedData.PassedTime);
			ProcessedData.DetectedStatus := Status;
			IF(_failedTimer.Q OR _passedTimer.Q) THEN			
				_checkSteps := eCheckSteps.Evaluating;
			END_IF;	
			
		eCheckSteps.Evaluating:	 
			ProcessedData.TimeStamp := Context.RealTimeClock.NowLocal();
			ProcessedData.Result := eInspectorResult.Failed;
			IF(NOT _failedTimer.Q AND _passedTimer.Q)THEN
				ProcessedData.Result := eInspectorResult.Passed;					
			END_IF
	
			IF(ProcessedData.Result = eInspectorResult.Failed) THEN
				ProcessedData.DetectedStatus := NOT ProcessedData.RequiredStatus;
			END_IF
			
			IF(ProcessedData.IsExcluded) THEN
				ProcessedData.Result := eInspectorResult.Excluded;
			END_IF
			
			ProcessedData.RetryAttemptsCount := ProcessedData.RetryAttemptsCount + 1;
			
			_checkSteps := eCheckSteps.Reporting;
			
			IF(ProcessedData.Result = eInspectorResult.Failed) THEN
				
				;
//				IF(_evaluator <> 0) THEN
//					_evaluator.AddFailureDescription(ProcessedData.FailureDescription);
//				END_IF;	 	
			END_IF;		
			
		eCheckSteps.Reporting:		
			_checkSteps := eCheckSteps.Done;		
		eCheckSteps.Done:				
	END_CASE

END_IF]]></ST>
    </Implementation>
    <Method Name="Inspect" Id="{43bdabea-79f5-087b-2dbf-073778ccdb2c}">
      <Declaration><![CDATA[METHOD Inspect : ITcoTaskStatus
VAR_INPUT
	SignalState : BOOL;	
END_VAR

VAR_IN_OUT
	_data : TcoDigitalInspectorData;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>